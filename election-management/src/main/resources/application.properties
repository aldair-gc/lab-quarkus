quarkus.application.name=election-management
quarkus.shutdown.timeout=5S

quarkus.flyway.migrate-at-start=true
quarkus.datasource.devservices.image-name=mariadb:10.11.2

# HIBERNATE
quarkus.datasource.db-kind=mariadb
quarkus.hibernate-orm.database.generation=none

## PRIMARY DATASOURCE
%prod.quarkus.datasource.reactive.url=vertx-reactive:mariadb://database:3306/election_management
%prod.quarkus.datasource.username=election-management-user
%prod.quarkus.datasource.password=election-management-password

## REPLICA DATASOURCE
%prod.quarkus.datasource.replica.reactive.url=vertx-reactive:mariadb://replica-database:3306/election_management
%prod.quarkus.datasource.replica.username=election-management-user
%prod.quarkus.datasource.replica.password=election-management-password

%dev.quarkus.hibernate-orm.log.bind-parameters=true
%test.quarkus.hibernate-orm.log.bind-parameters=true
%dev.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.sql=true

# LOGGING
%prod.quarkus.log.handler.gelf.enabled=true
%prod.quarkus.log.handler.gelf.additional-field."app".value=${quarkus.application.name}
%prod.quarkus.log.handler.gelf.include-full-mdc=true
%prod.quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# OPEN TELEMETRY
%prod.quarkus.opentelemetry.enabled=true
%dev.quarkus.opentelemetry.enabled=false
%prod.quarkus.datasource.reactive.driver=io.opentelemetry.instrumentation.vertx-reactive.OpenTelemetryDriver

# MICROMETER
quarkus.micrometer.export.prometheus.enabled= true
quarkus.micrometer.export.prometheus.path= /metrics
